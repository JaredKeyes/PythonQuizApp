[python]
label = "Python"

[[python.questions]]
question = "When was the first know use of the word 'quiz'"
answers = ["1781"]
alternatives = ["1771", "1871", "1881"]

[[python.questions]]
question = "Which built-in function can get information from the user" 
answers = ["input"]
alternatives = ["get", "print", "write"]

[[python.questions]]
question = "Which keyword do you use to loop over a given list of elements" 
answers = ["for"]
alternatives = ["while", "each", "loop"]

[[python.questions]]
question = "What's the purpose of the built-in zip() function"
answers = ["To iterate over two or more sequences at the same time"]
alternatives = [
    "To combine several strings into one",
    "To compress several files into one archive",
    "To get information from the user",
    ]

[[python.questions]]
question = "What's the name of Python's sorting algorithm"
answers = ["Timsort"] 
alternatives = ["Quicksort", "Merge sort", "Bubble sort"]

[[python.questions]]
question = "What does dict.get(key) return if key isn't found in dict"
answers = ["None"]
alternatives = ["key", "True", "False"]

[[python.questions]]
question = "How do you iterate over both indices and elements in an iterable"
answers = ["enumerate(iterable)"]
alternatives = [
    "enumerate(iterable, start=1)",
    "range(iterable)",
    "range(iterable, start=1)",
    ]

[[python.questions]]
question = "What's the offical name of the := operator"
answers = ["Assignment expression"]
alternatives = [
    "Named expression",
    "Walrus operator",
    "Colon equals operator",
    ]

[[python.questions]]
question = "What's one effect of calling random.seed(42)"
answers = ["The random numbers are reproducible."]
alternatives = [
    "The random numbers are more random.",
    "The computer clock is reset.",
    "The first random number is always 42.",
    ]

[[python.questions]]
question = "When does __name__ == '__main__' equal True in a Python file"
answers = ["When the file is run as a script"]
alternatives = [
    "When the file is imported as a module",
    "When the file has a valid name",
    "When the file only has one function",
    ]

[[python.questions]]
question = "Which version of Python is the first with TOML support built in"
answers = ["3.11"]
alternatives = ["3.9", "3.10", "3.12"]

[[python.questions]]
question = "What's the name of the list-like data structure in TOML"
answers = ["Array"]
alternatives = ["List", "Sequence", "Set"]

[[python.questions]]
question = "How can you run a Python script named quiz.py"
answers = ["python quiz.py", "python -m quiz"]
alternatives = ["python quiz", "python -m quiz.py"]
hint = "One option uses the filename, and the other uses the module name."

[[python.questions]]
question = "What is a PEP"
answers = ["A Python Enhancement Proposal"]
alternatives = [
    "A Pretty Exciting Policy",
    "A Preciously Evolved Python",
    "A Potentially Epic Prize",
]
hint = "PEPs are used to evolve Python."
explanation = """
    Python Enhancement Proposals (PEPs) are design documents that provide information to the Python community. PEPs are used to propose new features 
    for the Python community. PEPs are used to propose new features for the Python language, to collect commuinty input on an issue, and to document 
    design decisions made about the language.
"""

[[python.questions]]
question = "How can you add a docstring to a function"
answers = [
    "By writing a string literal as the first statement in the function",
    "By assigning a string to the function's .__doc__ attribute",
]
alternatives = [
    "By using the built-in @docstring decorator",
    "By returning a string from the function",
]
hint = "They're parsed from your code and stored on the function object."
explanation = """
    Docstrings document functions and other Python objects. A docsting is a string literal that occurs as the first statement in a module, function, 
    class, or method definition. Such a docstring becomes the .__doc__ special attribute of that object. See PEP 257 for more information.

    There is no built-in @doctring decorator. Many functions naturally return strings. Such a feature can therefore not be used for docstings.
"""

[[python.questions]]
question = "When was the first public version of Python released"
answers = ["February 1991"]
alternatives = ["January 1994", "October 2000", "December 2008"]
hint = "The first public version was labeled version 0.9.0."
explanation = """
    Guido van Rossum started work on Python in December 1989. He posted Python v0.9.0 to the alt.sources newsgroup in February 1991. Python reached 
    version 1.0.0 in January 1994. The next major versions, Python 2.0 and Python 3.0, were released in October 2000 and December 2008, respectively.
"""

[capitals]
label = "Capitals"

[[capitals.questions]]
question = "What's the capital of Norway"
answers = ["Oslo"]
alternatives = ["Stockholm", "Copenhagen", "Helsinki", "Reykjavik"]
hint = "Lars Onsager, Jens Stoltenberg, Trygve Lie, and Borge Ousland."
explanation = """
    Oslo was founded as a city in the 11th century and established as a trading place. It became the capital of Norway in 1299. The city was destroyed in
    a fire in 1624 and rebuilt as Christiania, named in honor of the regining king. The city was renamed back to Oslo in 1925.
"""

[[capitals.questions]]
question = "What's the state capital of Texas, USA"
answers = ["Austin"]
alternatives = ["Harrisburg", "Houston", "Galveston", "Columbia"]
hint = "SciPy is held there each year."
explanation = """
    Austin is named in honor of Stephen F. Austin. It was purpose-built to be the capital of Texas and was incorporated in December 1839. Hoston, 
    Harrisburg, Columbia, and Galveston are all earlier capitals of Texas.
"""

[makeitstick]
label = "Make It Stick"

[[makeitstick.questions]]
question = "What does the text suggest is a key component of effective learning"
answers = ["Retrieval practice and making learning effortful"]
alternatives = [
    "Repetitive exposure to the material",
    "Making the learning process effortless",
    "Focusing on a single learning style",
]

[[makeitstick.questions]]
question = "Which of the following study strategies is identified as one of the least productive in the text"
answers = ["Massed practice"]
alternatives = ["Spaced practice", "Interleaved practice", "Retrieval practice"]

[[makeitstick.questions]]
question = "According to the text, what common belief about learning is challenged by research"
answers = ["Cramming before exams is an efficient way to retain information"]
alternatives = [
    "Learning is more effective when you use various learning styles",
    "Spaced practice is less effective than massed practice",
    "Active retrieval interrupts forgetting",
]

[[makeitstick.questions]]
question = "What is the main issue with rereading texts as a study strategy, according to the text"
answers = ["It doesn't lead to durable memory retention"]
alternatives = ["It takes too much time", "It is too difficult for most learners", "It leads to overconfidence in understanding the material"]

[[makeitstick.questions]]
question = "Which of the following does the text emphasize as important for making learning stronger"
answers = ["Making learning harder and more personal"]
alternatives = ["Focusing solely on rote memorization", "Avoiding mistakes during the learning process", "Using only one learning technique consistently"]

[[makeitstick.questions]]
question = "What is the 'testing effect' as described in Chapter 2"
answers = ["The phenomenon where recalling information strengthens memory and enhances learning"]
alternatives = [
    "A method used to evaluate students' knowledge for grading purposes",
    "A type of test that is less stressful for students",
    "A theory that testing decreases students' ability to retain information",
]

[[makeitstick.questions]]
question = "Which of the following best describes the impact of retrieval practice on memory consolidation"
answers = ["It strengthens and multiplies the neural routes for future retrieval"]
alternatives = [
    "It weakens neural connections over time",
    "It makes memory retrieval more difficult in the future",
    "It has no effect on memory consolidation",
]

[[makeitstick.questions]]
question = "What was the main concern of Principal Roger Chamberlain regarding the use of testing at Columbia Middle School"
answers = ["He feared that testing was primarily a path to rote memorization rather than higher-order thinking"]
alternatives = [
    "He believed that testing would lead to higher stress levels among students",
    "He was worried that testing would disrupt the existing curriculum",
    "He thought that testing would not be effective in middle school classrooms",
]

[[makeitstick.questions]]
question = "What were the results of the study conducted in Columbia Middle School after implementing retrieval practice"
answers = ["The students who were quizzed scored significantly higher on quizzed material on unit exams compared to non-quizzed material"]
alternatives = [
    "Students showed no significant improvement in test scores",
    "Testing increased anxiety levels and decreases student performance",
    "Student preferred lectures over testing and quizzing methods",
]

[[makeitstick.questions]]
question = "How does delaying feedback on tests impact long-term learning"
answers = ["It enhances long-term learning because it encourages students to recall information from memory"]
alternatives = [
    "It has no impact on learning outcomes",
    "It worsens long-term retention compared to immediate feedback",
    "It leads to increased reliance on feedback and reduces independent thinking"
]

[[makeitstick.questions]]
question = "Which practice method is identified in the text as often leading to rapid gains in learning but also rapid forgetting"
answers = ["Massed practice"]
alternatives = ["Spaced practice", "Interleaved practice", "Varied practice"]

[[makeitstick.questions]]
question = "Why does spaced practice lead to better retention compared to massed practice"
answers = ["It provides time for consolidation of memory traces"]
alternatives = [
    "It allows for more review sessions",
    "It makes learning feel easier",
    "It relies on short-term memory",
]

[[makeitstick.questions]]
question = "What surprising result was found in the beanbag study with eight-year-olds"
answers = ["The group that practiced at mixed distances performed better on the final test"]
alternatives = [
    "The group that practiced tossing at mixed distances performed worse than those who practiced at a single distance",
    "The group that practiced at a fixed distance performed better on the final test",
    "There was no difference in performance between the two groups",
]

[[makeitstick.questions]]
question = "How does interleaved practice differ from massed practice"
answers = ["Interleaved practice involves practicing multiple skills in random sequences"]
alternatives = [
    "Interleaved practice focuses on a single skill repeated multiple times",
    "Interleaved practice requires more frequent review sessions",
    "Interleaved practice is less effective for long-term retention",
]

[[makeitstick.questions]]
question = "What is one major challenge students face when engaging in interleaved practice"
answers = ["They find the learning process slower and more confusing"]
alternatives = [
    "The quickly master each skill",
    "They receive immediate positive feedback",
    "They experience rapid forgetting of the material",
]

[[makeitstick.questions]]
question = "What is meant by the term 'desirable difficulties'"
answers = ["Obstacles that slow down learning, but lead to stronger, more enduring knowledge"]
alternatives = [
    "Challenges that impede learning and reduce retention",
    "Distractions that make learning more complex",
    "Tasks that are easy and enjoyable, enhancing memory retention",
]

[[makeitstick.questions]]
question = "Which of the following practices is described as ineffective for long-term learning"
answers = ["Massed Practice"]
alternatives = [
    "Spaced Practice",
    "Interleaving Practice",
    "Retrieval Pratice",
]

[[makeitstick.questions]]
question = "In the context of learning, what is 'retrieval practice'"
answers = ["Testing oneself on material after some time has passed"]
alternatives = [
    "Reading and reviewing notes multiple times",
    "Memorizing information through repetition",
    "Watching demonstrations of the material being learned",
]

[[makeitstick.questions]]
question = "Which of the following is an example of 'generation'"
answers = ["Solving a problem before being shown the correct method"]
alternatives = [
    "Memorizing a list of terms",
    "Re-reading a chapter of a textbook",
    "Listening to a lecture on the subject",
]

[[makeitstick.questions]]
question = "What did the Cal Poly baseball team experiment demonstrate about learning"
answers = ["Randomly interspersed practice leads to better retention and skill development"]
alternatives = [
    "Massed practice is more effective for long-term learning",
    "Repeated exposure to the same task leads to quicker mastery",
    "Physical training has no effect on cognitive learning processes",
]

[[makeitstick.questions]]
question = "What is metacognition"
answers = ["The process of monitoring and adjusting one's thinking and actions during problem-solving"]
alternatives = [
    "The ability to perform tasks without conscious thought",
    "A state of confusion when analyzing complex problems",
    "A method of memorization based on repetition",
]

[[makeitstick.questions]]
question = "According to Daniel Kahneman's theory, which system is responsible for quick, intuitive decisions"
answers = ["System 1"]
alternatives = [
    "System 2",
    "Both System 1 and System 2 equally",
    "Neither System 1 nor System 2",
]

[[makeitstick.questions]]
question = "Which of the following is a characteristic of cognitive biases"
answers = ["They distort our judgment and decision-making"]
alternatives = [
    "They always lead to correct judgments",
    "They only occur in untrained individuals",
    "They are caused by external factors only",
]

[[makeitstick.questions]]
question = "What is the 'curse of knowledge'"
answers = ["The tendency of experts to underestimate the difficulty others face when learning a new concept"]
alternatives = [
    "The tendency to believe you know less than you actually do",
    "The inability to remember information you once knew",
    "The overwhleming pressure to know everything in a given subject",
]

[[makeitstick.questions]]
question = "Which example illustrates how memory can be distorted"
answers = ["Remembering a conversation that never occurred after vividly imagining it"]
alternatives = [
    "People recalling a story exactly as it happened",
    "Recalling unrelated events clearly after a traumatic experience",
    "Developing false memories only when under hypnosis",
]

[[makeitstick.questions]]
question = "What is a significant problem with the learning styles theory"
answers = ["It lacks consistent scientific evidence to support its claims"]
alternatives = [
    "It overemphasizes the role of intelligence in learning",
    "It only applies to early childhood education",
    "It limits creativity by focusing too much on standardized testing",
]

[[makeitstick.questions]]
question = "What learning habit does Bruce Hendry demonstrate that makes him a successful learner"
answers = ["Extracting underlying principles and rules from experiences"]
alternatives = [
    "Relying on mentors for all his business decisions",
    "Memorizing specific examples from his past ventures",
    "Avoiding risks by sticking to familiar investments",
]

[[makeitstick.questions]]
question = "What is the key concept behind Robert Sternberg's theory of 'Successful Intelligence'"
answers = ["Intelligence consists of three components: analytical, creative, and practical intelligence"]
alternatives = [
    "Intelligence is fixed from birth and does not change",
    "Success in learning comes from focusing on one's strengths alone",
    "Only IQ tests can measure intelligence accurately",
]

[[makeitstick.questions]]
question = "Which of the following best describes the concept of 'structure building'"
answers = ["The process of organizing new information into a coherent mental framework"]
alternatives = [
    "The ability to memorize multiple examples for future recall",
    "Learning exclusively through visual or auditory means",
    "Learning through repeated exposure to the same material without variation",
]

[[makeitstick.questions]]
question = "What advantage does 'dynamic testing' offer over traditional testing methods"
answers = ["It helps identify weaknesses and refocus learning to improve performance"]
alternatives = [
    "It focuses only on strengths and areas of success",
    "It assesses a fixed level of intelligence at a given moment",
    "It ignores areas of weakness to avoid demotivating the learner",
]

[[makeitstick.questions]]
question = "What was the main outcome of Walter Mischel's marshmallow experiment"
answers = ["Children who waited for the second marshmallow were more successful in later life"]
alternatives = [
    "Children who waited for the second marshmallow were better at academic subjects",
    "All children who participated successfully resisted temptation",
    "The study showed that self-discipline could not be taught",
]

[[makeitstick.questions]]
question = "What is neuroplasticity"
answers = ["The brain's capacity to create new synapses and adapt its structure through life"]
alternatives = [
    "The ability of the brain to fix itself after birth without external influences",
    "The theory that brain function is genetically determined and cannot change",
    "The process of aging that leads to a decline in brain function",
]

[[makeitstick.questions]]
question = "What was James Paterson's initial motivation for learning mnemonic techniques"
answers = ["To ace his exams without fully mastering the material"]
alternatives = [
    "To perform better in memory competitions",
    "To increase his overall IQ",
    "To combat a family history of Alzheimer's disease",
]

[[makeitstick.questions]]
question = "Which of the following is a key feature of deliberate practice"
answers = ["Solitary, goal-directed effort focused on surpassing current skill levels"]
alternatives = [
    "Practicing in groups to enhance motivation",
    "Repetitive tasks designed to increase IQ",
    "Avoiding feedback to maintain independence",
]

[[makeitstick.questions]]
question = "How do mnemonic devices help in memory retention"
answers = ["They help organize learned material for quick retrieval using vivd associations"]
alternatives = [
    "They enhance the brain's fluid intelligence",
    "They serve as shortcuts that eliminate the need for deeper understanding",
    "They replace the need for spaced retrieval practice",
]

[[makeitstick.questions]]
question = "What is the primary purpose of retrieval practice"
answers = ["To strengthen memory by recalling information without looking at the text"]
alternatives = [
    "To enhance memorization through repeated exposure",
    "To create fluency with the text",
    "To memorize peripheral details",
]

[[makeitstick.questions]]
question = "Why is self-quizzing considered more effective than rereading"
answers = ["It helps focus on central ideas and improves long-term recall"]
alternatives = [
    "It increases familiarity with the text",
    "It gives a sense of fluency in the material",
    "It reduces the amount of time needed to study",
]

[[makeitstick.questions]]
question = "How does spaced practice differ from massed practice"
answers = ["Spaced practice involves reviewing material multiple times with intervals in between"]
alternatives = [
    "Spaced practice focuses on repetitive study in a single session",
    "Massed practice is more effective than spaced practice for long-term memory",
    "Spaced practice requires you to focus on only one topic at a time",
]

[[makeitstick.questions]]
question = "What is the benefit of making errors during retrieval practice"
answers = ["It strengthens memory if the mistakes are corrected"]
alternatives = [
    "It sets you back in your learning process",
    "It indicates a lack of progress",
    "It should be avoided to minimize frustration",
]

[[makeitstick.questions]]
question = "Why does massed practice create a false sense of mastery"
answers = ["It leads to short-term gains that quickly fade"]
alternatives = [
    "It helps you retain information for the long term",
    "It strengthens your grasp on the material",
    "It works best when preparing for exams",
]

[[makeitstick.questions]]
question = "What is interleaved practice"
answers = ["Alternating between different topics to reinforce learning"]
alternatives = [
    "Studying one problem type repeatedly until mastered",
    "Reviewing one subject before moving on to another",
    "Focusing on similar problem types to reinforce memory",
]

[[makeitstick.questions]]
question = "Why is elaboration a powerful learning strategy"
answers = ["It allows you to discover new layers of meaning and make connections"]
alternatives = [
    "It simplifies the material for better retention",
    "It helps you memorize facts without deeper understanding",
    "It encourages cramming before exams",
]

[[makeitstick.questions]]
question = "How does reflection ehance learning"
answers = ["By combining retrieval practice and elaboration to deepen understanding"]
alternatives = [
    "By reinforcing factual information through repetition",
    "By replacing the need for spaced practice",
    "By improving your ability to quickly review material before an exam",
]

[[makeitstick.questions]]
question = "What is calibration in the context of learning"
answers = ["Aligning your sense of mastery with objective feedback"]
alternatives = [
    "Estimating your performance based on past experience",
    "Creating a self-paced study schedule",
    "Predicting exam questions based on textbook familiarity",
]

[[makeitstick.questions]]
question = "Which of the following best describes the use of mnemonic devices in learning"
answers = ["They are tools for creating mental structures that aid in memory retrieval"]
alternatives = [
    "Mnemonic devices improve critical thinking skills",
    "They help simplify complex information into manageable steps",
    "They enhance deep understanding of the material",
]

[cpre]
label = "CISSP Pre-Assessment"

[[cpre.questions]]
question = "Which of the following types of access control seeks to discover evidence of unwanted, unauthorized, or illicit behavior or activity"
answers = ["Detective"]
alternatives = ["Preventive", "Deterrent", "Corrective"]
explanation = """
    Detective access controls are used to discover (and document) unwanted or unauthorized activity.
"""

[[cpre.questions]]
question = "Define and detail the aspects of password selection that distinguish good password choices from ultimately poor password choices"
answers = ["All of the above"]
alternatives = ["Difficult to guess or unpredictable", "Meet minimum length requirements", "Meet specific complexity requirements"]
explanation = """
    Strong password choices are difficult to guess, unpredictable, and of specified minimum lengths to ensure that password entries cannot be 
    computationally determined. They may be randomly generated and utilize all the alphabetic, numeric, and punctuation characters; they should never
    be written down or shared; they should not be stored in pubicly accessible or generally readable locations; and they shouldn't be transmitted in
    the clear.
"""

[[cpre.questions]]
question = "Which of the following is most likely to detect DoS attacks"
answers = ["Network-based IDS"]
alternatives = [
    "Host-based IDS",
    "Vulnerability Scanner",
    "Penetration Testing",
]
explanation = """

"""

[[cpre.questions]]
question = "Which of the following is considered a denial-of-service attack"
answers = ["While surfing the Web, sending to a web server a malformed URL that causes the system to consume 100 percent of the CPU"]
alternatives = [
    "Pretending to be a technical manager over the phone and asking a receptionist to change their password",
    "Intercepting network traffic by copying the packets as they pass through a specific subnet",
    "Sending message packets to a recipient who did not request them simply to be annoying",
]
explanation = """

"""

[[cpre.questions]]
question = "At which layer of the OSI model does a router operate"
answers = ["Network Layer"]
alternatives = [
    "Layer 1",
    "Transport Layer",
    "Layer 5",
]
explanation = """

"""

[[cpre.questions]]
question = "Which type of firewall automatically adjusts its filtering rules based on the content of the traffic of existing sessions"
answers = ["Dynamic Packet Filtering"]
alternatives = [
    "Static Packet Filtering",
    "Application-level Gateway",
    "Circut Level Gateway",
]
explanation = """

"""

[[cpre.questions]]
question = "A VPN can be established over which of the following"
answers = ["All of the above"]
alternatives = [
    "Wireless LAN connection",
    "Remote access dial-up connection",
    "WAN link",
]
explanation = """

"""

[[cpre.questions]]
question = "What type of malware uses social engineering to trick a victim into installing it"
answers = ["Trojan Horse"]
alternatives = [
    "Viruses",
    "Worms",
    "Logic Bomb",
]
explanation = """

"""

[[cpre.questions]]
question = "The CIA Triad comprises what elements"
answers = ["Availability, Confidentiality, Integrity"]
alternatives = [
    "Contiguousness, Interoperable, Arranged",
    "Authentication, Authorization, Accountability",
    "Capable, Available, Integral",
]
explanation = """

"""

[[cpre.questions]]
question = "Which of the following is not a required component in the support of accountability"
answers = ["Privacy"]
alternatives = [
    "Auditing",
    "Authentication",
    "Authorization",
]
explanation = """

"""

[[cpre.questions]]
question = "Which of the following is not a defense against collusion"
answers = ["Group User Accounts"]
alternatives = [
    "Seperation of Duties",
    "Restricted Job Responsibilities",
    "Job Rotation",
]
explanation = """

"""

[[cpre.questions]]
question = "A data custodian is responsible for securing resources after ___________ has assigned the resource a security label"
answers = ["The Data Owner"]
alternatives = [
    "Senior Management",
    "An Auditor",
    "Security Staff",
]
explanation = """

"""

[[cpre.questions]]
question = "In what phase of the Capability Maturity Model for Software (SW-CMM) are quantitative measures utilized to gain a detailed understanding of the software development process"
answers = ["Managed"]
alternatives = [
    "Repeatable",
    "Defined",
    "Optimizing",
]
explanation = """

"""

[[cpre.questions]]
question = "Which one of the following is a layer of the ring protection scheme that is not normally implemented in practice"
answers = ["Layer 1"]
alternatives = [
    "Layer 0",
    "Layer 3",
    "Layer 4",
]
explanation = """

"""

[[cpre.questions]]
question = "What is the last phase of the TCP/IP three-way handshake sequence"
answers = ["ACK packet"]
alternatives = [
    "SYN packet",
    "NAK packet",
    "SYN/ACK packet",
]
explanation = """

"""

[[cpre.questions]]
question = "Which one of the following vulnerabilities would best be countered by adequate parameter checking"
answers = ["Buffer Overflow"]
alternatives = [
    "Time of Check to Time of Use",
    "SYN Flood",
    "Distributed Denial of Service",
]
explanation = """

"""

[[cpre.questions]]
question = """What is the value of the logical operation shown here?
X: 0 1 1 0 1 0
Y: 0 0 1 1 0 1
---------------
X v Y: 
"""
answers = ["0 1 1 1 1 1"]
alternatives = [
    "0 1 1 0 1 0",
    "0 0 1 0 0 0",
    "0 0 1 1 0 1",
]
explanation = """

"""

[[cpre.questions]]
question = "In what type of cipher are the letters of the plain-text message rearranged to form the cipher text"
answers = ["Transposition Cipher"]
alternatives = [
    "Substitution Cipher",
    "Block Cipher",
    "Onetime Pad",
]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[cpre.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[sysadmin]
label = "Sys Admin Questions"

[[sysadmin.questions]]
question = "What constitutes the core of the Linux operating system"
answers = ["The Kernel"]
alternatives = [
    "The Vi Editor",
    "The Command Line",
    "The Terminal",
]
explanation = """

"""

[[sysadmin.questions]]
question = "Is a directory considered a type of file"
answers = ["Yes"]
alternatives = [
    "No",
]
explanation = """

"""

[[sysadmin.questions]]
question = "What symbol denotes the top-level directory"
answers = ["/"]
alternatives = [
    "~",
    "@",
    ":",
]
explanation = """

"""

[[sysadmin.questions]]
question = "Which symbol represents the user's home directory"
answers = ["~"]
alternatives = [
    "@",
    "+",
    "/",
]
explanation = """

"""

[[sysadmin.questions]]
question = "Which Linux command tallies the total number of lines, words, and characters in a file"
answers = ["wc"]
alternatives = [
    "count",
    "wcount",
    "countw",
]
explanation = """

"""

[[sysadmin.questions]]
question = "Which Linux command is employed to delete files"
answers = ["rm"]
alternatives = [
    "remove",
    "delete",
    "del",
]
explanation = """

"""

[[sysadmin.questions]]
question = "Which Linux command within the vi editor is employed to remove a single character"
answers = ["x"]
alternatives = [
    "d",
    "r",
    "c",
]
explanation = """

"""

[[sysadmin.questions]]
question = "Which Linux command reveals all hidden files"
answers = ["ls -a"]
alternatives = [
    "ls",
    "ls -h",
    "dir -a",
]
explanation = """

"""

[[sysadmin.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[sysadmin.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[sysadmin.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[sysadmin.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[sysadmin.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[sysadmin.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[sysadmin.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[sysadmin.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[sysadmin.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[sysadmin.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[[sysadmin.questions]]
question = ""
answers = [""]
alternatives = [

]
explanation = """

"""

[aws]
label = "AWS Questions"

[[aws.questions]]
question = "What does STS stand for in AWS"
answers = ["Security Token Service"]
alternatives = [
    "Simple Token Service",
    "Secure Transport Service",
    "Session Token Service",
]

[[aws.questions]]
question = """What is the purpose of the following command?

PRINCIPAL_ARN=$(aws sts get-caller-identity --query Arn --output text)"""
answers = ["Calls STS to fetch the Amazon Resource Name of the currently authenticated identity and assigns it to PRINCIPAL_ARN"]
alternatives = [
    "Retrieves your AWS account ID and stores it in the PRINCIPAL_ARN variable",
    "Queries your AWS CLI configuration for the Amazon Resource Name and saves it into PRINCIPAL_ARN",
    "Gets the username of the current IAM user and writes it into PRINCIPAL_ARN",
]

[awsdev]
label = "AWS Dev - Associate"

[[awsdev.questions]]
question = "A company is re-architecting a monolithic application into microservices on AWS. Which of the following are advantages of a microservices (loosely coupled) architecture compared to a monolith? (Select TWO)"
answers = ["Each microservice can be scaled independently based on demand", "Different microservices can be developed and deployed independently of each other"]
alternatives = [
"It completely eliminates the need for network communication between components",
"All microservices are deployed together, making release management easier",
"Troubleshooting is simpler since all logs and errors are centralized in one service"
]
explanation = """Microservices break an application into independent components that can be scaled and updated individually, improving agility and scalability. For example, each service can scale or be deployed on its own schedule without affecting others. In contrast, a monolith requires scaling or deploying the entire application as one unit. This loosely coupled approach also isolates failures better (one service failure is less likely to crash the whole system). Microservices do not eliminate network communication — in fact, they use network calls between components (monoliths avoid that by calling code in-process). Also, debugging can be more complex in microservices because logs are distributed, not centralized in one place. Finally, microservices have separate deployment pipelines (you do *not* deploy all services together), which is the opposite of a monolithic release process."""

[[awsdev.questions]]
question = "A developer is implementing a retry mechanism for an API call that can sometimes fail. Why is it important that the operation being retried is idempotent?"
answers = ["So that repeating the operation multiple times has no additional effects, preventing duplicate actions if a retry occurs"]
alternatives = [
"It makes the operation run faster on each subsequent attempt",
"It ensures only authorized users can repeat the operation",
"It allows the operation to run multiple times in parallel without issues"
]
explanation = """Idempotency means that performing the same action more than once results in the same outcome as doing it once. In other words, if a request is executed multiple times, it won’t cause unintended side effects like duplicate entries or repeated charges. This property is crucial when implementing retries—if a call fails and is retried, an idempotent operation won’t, for example, create a second record or repeat an action beyond the first effect. Idempotency doesn’t inherently make an operation faster on retries, isn’t about authorization, and isn’t specifically about parallelism; it’s about safely retrying the *same* action without harmful consequences."""

[[awsdev.questions]]
question = "A web application needs to scale out to multiple servers. Why is it recommended to make the application stateless?"
answers = ["So any server can handle any request, allowing easy scaling and recovery without session data tied to one instance"]
alternatives = [
"It allows each user’s session to be tied to one specific server for efficiency",
"It eliminates the need for any data storage backend",
"It enables storing user session data in memory for faster retrieval"
]
explanation = """Stateless applications do not rely on storing session information on any single server. This means any server instance can handle any request because there’s no requirement to “stick” a user to the same server for session data. As a result, you can add or remove servers easily (like behind a load balancer) and recover from instance failures without impacting users – new instances can pick up where others left off. By contrast, if each user’s session is kept in one specific server’s memory (stateful design), scaling out is difficult and a server failure would lose active user sessions. Stateless design still requires a backend store (for session or shared data), but that store is external (e.g., a database or cache) rather than the app server’s memory."""

\[\[awsdev.questions]]
question = "A new feature requires processing user-uploaded files to generate a report. The team is debating doing this work synchronously (during the upload request) vs. asynchronously after the upload. When is using an asynchronous processing approach (e.g., via an SQS queue and a worker) preferable?"
answers = \["When the task can be performed in the background without making the user wait, improving responsiveness and decoupling the processing from the user request"]
alternatives = \[
"When the client expects the operation to complete within the same request",
"When the processing must occur inline to ensure it's finished before proceeding",
"When the overhead of using a queue or event mechanism is unacceptable"
]
explanation = """Asynchronous processing is ideal if the work can be done “out-of-band” — that is, the user doesn’t need the result immediately. For example, if generating the report takes several seconds or minutes, it's better to have the file upload request quickly acknowledge success and then have a background process (triggered via a queue or event) generate the report. This way, the user isn’t kept waiting and the system remains responsive. It also decouples the upload component from the processing component. If the result were needed immediately by the user, synchronous would be required. The slight overhead of using a queue or event is usually worth the benefit; if using a queue was truly unacceptable overhead, then that scenario would favor synchronous processing (since asynchronous wouldn’t be suitable)."""

\[\[awsdev.questions]]
question = "An application calls an external API which occasionally fails or times out. What is the best way to make the application more fault-tolerant to these transient errors?"
answers = \["Implement a retry mechanism with exponential backoff for the external API calls"]
alternatives = \[
"Immediately retry in a tight loop until the service responds",
"Abort the operation on the first failure to prevent further errors",
"Ignore the error and proceed as if the call succeeded"
]
explanation = """To handle intermittent failures gracefully, the application should retry the external API call, using exponential backoff (increasing delays between attempts). This approach increases the likelihood of a successful call on a subsequent try while avoiding flooding the external service with rapid retries. Immediately hammering the API with a tight loop of retries can overwhelm the service (and usually will still fail). Giving up after the first failure reduces resilience (a temporary glitch could have been resolved with a retry). Silently ignoring the error is dangerous because the operation didn’t actually complete – instead, the application should detect the failure and handle it (via retries or fallback logic)."""

\[\[awsdev.questions]]
question = "A developer needs one component of an application to send messages that multiple other services will receive in parallel, and some receivers should only process certain types of events. Which AWS service is best suited for this publish/subscribe use case with message filtering?"
answers = \["Amazon EventBridge"]
alternatives = \[
"Amazon Simple Notification Service (SNS)",
"Amazon Simple Queue Service (SQS)",
"AWS Step Functions"
]
explanation = """Amazon EventBridge is ideal for a use case where you have a publisher sending events and multiple subscribers, with fine-grained filtering. EventBridge acts as an event bus: you can define rules to route events to many targets, and those rules can filter events based on content or pattern. SNS also provides pub/sub messaging with multiple subscribers, but its filtering is limited to message attributes and it doesn’t natively support complex event pattern matching like EventBridge. SQS is a queue for point-to-point messaging (it’s better for one consumer group rather than fan-out to many). AWS Step Functions is for orchestrating workflows, not for broad event distribution to multiple services."""

\[\[awsdev.questions]]
question = "Which of the following services can directly trigger an AWS Lambda function when an event occurs? (Select THREE)"
answers = \["Amazon S3", "Amazon DynamoDB Streams", "Amazon SNS"]
alternatives = \[
"Amazon EC2",
"Amazon RDS"
]
explanation = """AWS Lambda can be triggered by many services. For example, Amazon S3 can invoke a Lambda function when a new object is created (via S3 event notifications), DynamoDB Streams can trigger a Lambda when data in a table is modified, and Amazon SNS can trigger a Lambda as one of its subscribers. Amazon EC2 and Amazon RDS, on the other hand, do not have direct integrations to call Lambda on events. (EC2 instance events can be captured by EventBridge and then Lambda, and RDS can publish events to SNS which could trigger Lambda, but they cannot invoke Lambda *directly* by themselves.)"""

\[\[awsdev.questions]]
question = "A Lambda function needs to access an Amazon RDS database in a private subnet and also call an external API on the Internet. How can you enable both capabilities?"
answers = \["Configure the Lambda function to run in the VPC (in the private subnet with the database), and ensure a NAT Gateway is in place for outbound Internet access"]
alternatives = \[
"Place the Lambda function in a public subnet with an Internet Gateway; it will then have access to the RDS instance and the Internet",
"Run the Lambda function in the private subnet; it can automatically access the Internet from there without any additional configuration",
"It is impossible for a Lambda in a VPC to access the Internet"
]
explanation = """To reach a private RDS, the Lambda should be configured to run inside the same VPC and subnet(s) as the database (and use the appropriate security group so it can connect to RDS). And to call external APIs from that private subnet, the Lambda’s subnet route table should have a route through a NAT Gateway in a public subnet. The NAT Gateway provides the Lambda outbound internet access. Simply putting the Lambda in a public subnet isn’t sufficient in this scenario (Lambda functions don't get a public IP, and that setup wouldn’t help access the private DB either). Running in a private subnet without NAT would let it reach the database, but it would have *no internet access*. And it is definitely possible for a VPC-based Lambda to access the internet—using a NAT is the standard solution."""

\[\[awsdev.questions]]
question = "A team needs to ingest and process a continuous stream of events (millions per hour) in real time, with multiple consumers processing the data in parallel. Which AWS service is best suited for this use case?"
answers = \["Amazon Kinesis Data Streams"]
alternatives = \[
"Amazon SQS",
"Amazon EventBridge",
"Amazon SNS"
]
explanation = """Amazon Kinesis Data Streams is designed for high-throughput, real-time streaming of data. It can continuously capture and deliver millions of events per hour and feed them to multiple processing applications (consumers) in parallel thanks to its shard-based design. Neither SQS nor SNS are as well-suited for big *continuous* streams of data with multiple independent consumers; SQS is mainly for point-to-point queues (and though you can have multiple consumers, they compete for messages rather than all getting every message) and SNS delivers each message to subscribers but doesn’t support replay or large-scale streaming like Kinesis. EventBridge is for discrete events and has lower throughput limits compared to Kinesis when dealing with huge volumes of streaming data."""

\[\[awsdev.questions]]
question = "A developer needs to upload a 100GB file to Amazon S3. What is the best way to upload this large file efficiently?"
answers = \["Use the S3 multipart upload capability to upload the file in parts"]
alternatives = \[
"Use a single PutObject API call to upload the entire file at once",
"Upgrade to a more powerful instance type to make the upload faster",
"Manually split the file into smaller chunks and upload them as separate objects"
]
explanation = """For very large files, Amazon S3's multipart upload is the recommended approach. It breaks the file into parts and uploads them in parallel, which is more efficient and resilient to network issues. In fact, files over 5 GB *must* use multipart upload. A single PutObject call can't handle 100GB (there is a 5GB limit per PUT) and would be risky (a failure means restarting from scratch). Using a bigger instance doesn't overcome S3’s upload limits or significantly speed up a single huge transfer. Splitting the file into separate objects isn't desirable if you need it as one object; multipart upload lets you upload parts and combine them into one object in S3."""

\[\[awsdev.questions]]
question = "A developer needs to retrieve items from a DynamoDB table using an attribute that is NOT part of the primary key. What is the recommended solution to efficiently get these items?"
answers = \["Create a Global Secondary Index (GSI) on that attribute and query the index"]
alternatives = \[
"Use a DynamoDB Scan operation to retrieve all items and filter the results in code",
"Call GetItem with the attribute as the key (even if it's not in the primary key schema)",
"Run a SQL query against the DynamoDB table for that attribute"
]
explanation = """If you need to query DynamoDB by a non-key attribute, the proper solution is to create a Global Secondary Index on that attribute. A GSI gives that attribute its own index allowing efficient query lookups. Scanning the entire table and filtering is very slow and costly at scale, as it reads every item. GetItem won't work with a non-key attribute at all (GetItem requires the primary key). And while DynamoDB now has a PartiQL interface for SQL-like operations, under the hood it still requires an index or does a scan for non-key attributes—there's no hidden SQL magic to query by arbitrary attribute without an index."""

\[\[awsdev.questions]]
question = "A developer has several AWS Lambda functions that need to execute in sequence and sometimes in parallel, with certain steps only happening if previous steps succeed. Which service can help orchestrate this workflow with minimal custom code?"
answers = \["AWS Step Functions"]
alternatives = \[
"Amazon SQS",
"AWS CodePipeline",
"Amazon Simple Workflow Service (SWF)"
]
explanation = """AWS Step Functions is the ideal service to coordinate complex workflows of Lambda functions (and other services) with branching, parallel execution, and error handling—all defined in a state machine, rather than in code. It handles sequencing and conditional logic with little custom code. Amazon SQS is just a queue and would require custom code to coordinate multi-step processes. AWS CodePipeline is for CI/CD (code build/test/deploy) pipelines, not arbitrary app workflow logic. Amazon SWF is an older orchestration service that could do similar workflows, but it requires writing a lot more custom logic (Step Functions is the newer, managed solution for minimal code)."""

\[\[awsdev.questions]]
question = "A developer wants to locally test and debug a serverless application (Lambda functions and API Gateway) before deploying it. Which tool can they use?"
answers = \["The AWS SAM CLI (Serverless Application Model CLI) for local testing"]
alternatives = \[
"AWS CloudFormation",
"AWS CodeDeploy",
"AWS Cloud9"
]
explanation = """The AWS SAM CLI allows developers to simulate Lambda and API Gateway locally. They can invoke functions on their machine and even emulate API Gateway endpoints to test the full serverless application before deployment. CloudFormation is for deploying infrastructure (not a local test tool). CodeDeploy is for deploying updates to servers or Lambdas, not for local debugging. AWS Cloud9 is a cloud IDE (which does provide an environment to edit/run code, but by itself it doesn't simulate API Gateway and event sources the way SAM CLI does)."""

\[\[awsdev.questions]]
question = "A Lambda function needs to process very large files (multiple GB) and requires a file system to read/write intermediate data that persists across invocations. What solution can support this in AWS?"
answers = \["Attach an Amazon EFS (Elastic File System) file system to the Lambda function for persistent, shared storage"]
alternatives = \[
"Rely on the Lambda's /tmp directory to store the files between invocations",
"Store the files in Amazon S3 and access them via the S3 API",
"Increase the Lambda function's memory allocation to get more temporary disk space"
]
explanation = """AWS Lambda can be configured to mount an Amazon EFS file system, which provides a persistent, scalable POSIX file system accessible across invocations (and even by multiple Lambdas or EC2 instances). EFS is the appropriate solution for multi-GB data that needs to be processed with normal file semantics or shared across runs. The Lambda /tmp directory is ephemeral—data there does not persist once the execution environment is recycled (and it's limited in size, by default 512 MB, even with the newer configurable 10 GB limit it might not be enough, and it isn't shared across different concurrent instances). Storing data in S3 is durable, but it's not a mounted file system for random read/write; it requires using the S3 API to upload/download objects (which can be slower or more cumbersome for frequent intermediate reads/writes). Increasing Lambda memory can increase /tmp size up to a limit, but it still doesn't persist beyond the function's life or share data between concurrent executions."""

\[\[awsdev.questions]]
question = "A development team wants to quickly build, deploy, and host a full-stack web application on AWS (a React frontend with a serverless backend and user authentication) without managing servers. Which AWS service or framework can streamline this process?"
answers = \["AWS Amplify"]
alternatives = \[
"AWS Elastic Beanstalk",
"AWS CodeStar",
"Amazon Lightsail"
]
explanation = """AWS Amplify is a development platform that simplifies building full-stack applications. It provides libraries and CLI tools to set up cloud backend resources (like authentication via Cognito, APIs, storage) and also offers hosting for web apps with a built-in CI/CD workflow. This allows developers to focus on app code rather than managing servers. Elastic Beanstalk automates infrastructure for web apps but is more for backend services (it doesn’t directly scaffold a frontend or authentication for you). AWS CodeStar can set up a basic project with CI/CD, but it’s not as focused on quickly adding auth/storage/etc for a front-end app as Amplify is. Lightsail is for simple server setups and doesn't natively provide the rich front-end + serverless backend integration that Amplify does."""

\[\[awsdev.questions]]
question = "A developer needs to run AWS CLI commands but cannot install the CLI locally. What AWS service provides a browser-based command-line interface environment with credentials?"
answers = \["AWS CloudShell"]
alternatives = \[
"AWS Cloud9",
"AWS Systems Manager Session Manager",
"AWS Management Console"
]
explanation = """AWS CloudShell is a browser-based shell environment provided in the AWS console, pre-authenticated with the user's credentials. It comes with AWS CLI and other tools so you can run commands without any local setup. AWS Cloud9 is a web-based IDE (with a terminal) but requires creating an EC2 development environment; it's more for coding than quick CLI access. Systems Manager Session Manager is used to open shells on EC2 instances (remotely manage servers), not to run AWS commands in the cloud directly. The AWS Management Console is the web GUI; while it allows resource management, it is not a CLI environment."""

\[\[awsdev.questions]]
question = "A development team wants to automatically identify code defects and improvements during code review. Which AWS service uses machine learning to analyze source code and provide such recommendations?"
answers = \["Amazon CodeGuru Reviewer"]
alternatives = \[
"Amazon CodeGuru Profiler",
"Amazon Inspector",
"AWS X-Ray"
]
explanation = """Amazon CodeGuru Reviewer uses ML to analyze code (for supported languages like Java and Python) and provides suggestions on bugs, anti-patterns, and optimizations during the code review process. It integrates with repositories to give feedback on pull requests. Amazon CodeGuru Profiler is a related service but is for profiling running applications to find performance issues (not reviewing source code). Amazon Inspector checks security vulnerabilities in AWS environments (like EC2 instances), not application source code. AWS X-Ray is for tracing application requests, not for reviewing source code."""

\[\[awsdev.questions]]
question = "An application running on EC2 needs to read and write objects in an S3 bucket. According to AWS best practices, how should the application get credentials to access the S3 bucket?"
answers = \["Use an IAM role attached to the EC2 instance (via instance profile) that grants the necessary S3 permissions"]
alternatives = \[
"Configure and store a static AWS access key and secret key in the application's configuration files",
"Embed AWS credentials directly in the application code",
"Make the S3 bucket publicly accessible to eliminate the need for credentials"
]
explanation = """The recommended approach is to use an IAM role for the EC2 instance. The role’s temporary credentials are automatically provided to the instance (through the instance profile) and allow the app to access S3 securely. This avoids hardcoding secrets. Storing static access keys in config or code is insecure (they could be exposed or not rotated) and against best practices. Making the bucket public would remove the need for creds, but it exposes data to everyone, which is a major security risk and not a solution for an internal application."""

\[\[awsdev.questions]]
question = "A developer needs to store a database password that the application will use at runtime. What is the most secure way to manage this secret in AWS?"
answers = \["Store the password in AWS Secrets Manager and retrieve it on-demand from the application"]
alternatives = \[
"Embed the password directly in the application code",
"Save the password in plain text on an S3 bucket",
"Set the password as an unencrypted environment variable"
]
explanation = """AWS Secrets Manager is designed to securely store sensitive information like database credentials and can automatically rotate them if configured. The secret is encrypted and only accessible via IAM-controlled API calls by authorized entities. Hardcoding a password in code or keeping it in plaintext (in S3 or environment variables) is not secure — it could be leaked or accessed by unauthorized users. If environment variables are used, they should be populated from a secure store (and even then often encrypted at rest). Secrets Manager (or at least Systems Manager Parameter Store with encryption) is the safer approach, with Secrets Manager providing built-in rotation capabilities."""

\[\[awsdev.questions]]
question = "A client application needs to upload a file directly to a private S3 bucket, but the user does not have AWS credentials. What approach allows the user to securely upload to S3 without exposing credentials or making the bucket public?"
answers = \["Generate an S3 pre-signed URL (for a PUT upload) and have the client use that URL to upload the file"]
alternatives = \[
"Make the S3 bucket publicly writable during the upload window",
"Distribute AWS access key and secret to the client application",
"Have the client send the file to an intermediary server which then uploads to S3"
]
explanation = """The proper solution is to use a pre-signed URL for S3. A pre-signed URL is generated by a trusted backend (with valid credentials) and gives the client temporary permission to upload directly to the bucket. This way, the bucket stays private and no AWS keys are shared, yet the client can PUT to S3. Making the bucket public even briefly is insecure (someone else could write to it during that time). Handing out AWS credentials to end users is extremely unsafe. Having an intermediary server upload on behalf of the client would work, but it introduces unnecessary complexity and scalability bottlenecks — pre-signed URLs avoid the need for a middle-man server for the upload."""

\[\[awsdev.questions]]
question = "A startup is building a mobile app and needs user sign-up, sign-in (including Google/Facebook login), and then to allow those users access to certain AWS resources (like an S3 bucket). Which AWS service should they use to handle authentication and provide temporary credentials for AWS resources with minimal custom code?"
answers = \["Amazon Cognito (User Pool for user authentication and Identity Pool to issue temporary AWS credentials)"]
alternatives = \[
"Create dedicated IAM users for each mobile app user in AWS",
"Build a custom authentication system on EC2 and manage user credentials manually",
"Use AWS IAM Identity Center (AWS Single Sign-On) for the app's user sign-in"
]
explanation = """Amazon Cognito is purpose-built for this scenario. Cognito User Pools manage user registration, login, and even social logins (federation), handling all the heavy lifting of authentication. Cognito Identity Pools then exchange those user identities for temporary AWS credentials (via IAM roles) so the app can access AWS resources like S3 on the user's behalf. Creating IAM users for each app user is not scalable or secure (IAM users are meant for system/admin access, not thousands of mobile users). Building a custom auth system is a lot of effort and risk when Cognito provides a managed solution. AWS IAM Identity Center is for enterprise/workforce SSO, not for customer-facing mobile app authentication."""

\[\[awsdev.questions]]
question = "Which of the following are supported methods for controlling access to API Gateway REST API endpoints? (Select THREE)"
answers = \["Using AWS IAM authorization (SigV4 signed requests)", "Using Amazon Cognito user pool authorizers", "Using a Lambda function as a custom authorizer"]
alternatives = \[
"Applying VPC security groups to API Gateway endpoints",
"Requiring only an API key for each request as the sole authorization mechanism"
]
explanation = """API Gateway supports three primary types of access control on REST APIs: IAM authentication (where requests are signed with AWS credentials and IAM policies control access), Cognito user pool authorizers (to verify JWT tokens from Amazon Cognito for user authentication), and Lambda custom authorizers (custom auth logic in a Lambda that returns an allow/deny decision). Security groups do not apply to API Gateway (it's not in a VPC where you attach security groups to it). API keys can be used with API Gateway, but they are not an authentication/authorization mechanism – they are meant for rate limiting/usage plans and provide no user identity or permission control by themselves."""

\[\[awsdev.questions]]
question = "A developer is storing sensitive files in S3 and needs them encrypted at rest with a customer-managed key that the team can control and rotate. How can this be accomplished?"
answers = \["Use S3 server-side encryption with AWS KMS, specifying a customer-managed KMS CMK for the bucket/objects (SSE-KMS with your own key)"]
alternatives = \[
"Enable S3's default encryption with Amazon S3-managed keys (SSE-S3)",
"Encrypt the files in the application before uploading to S3 (client-side encryption)",
"Do nothing; S3 automatically encrypts all data at rest by default with no action needed"
]
explanation = """To have full control over the encryption keys, you would use S3 server-side encryption with KMS and choose a customer-managed CMK that your team owns. This way, you can set the key policy and rotation schedule as needed. SSE-S3 (S3-managed keys) also encrypts at rest, but those keys are managed by AWS, not by you (so you cannot control or rotate them yourself). Client-side encryption (encrypting in the app) is possible but adds complexity of key management in your application; if the requirement is just to use a customer-managed key, using KMS server-side is simpler and still meets that need. Note: AWS does encrypt S3 objects by default nowadays using SSE-S3, but that uses an AWS-managed key, not your own key, so it wouldn't fulfill the “customer-managed key” requirement."""

\[\[awsdev.questions]]
question = "A developer in Account A needs to access an S3 bucket in Account B. What is a secure way to allow this cross-account access?"
answers = \["Use AWS STS to assume a role in Account B that has access to the bucket"]
alternatives = \[
"Create an IAM user in Account B and give the developer the credentials",
"Make the S3 bucket publicly accessible",
"Use AWS Resource Access Manager (RAM) to share the S3 bucket with Account A"
]
explanation = """The proper solution is to set up an IAM role in Account B that grants the needed S3 access, and allow Account A (the user or application) to assume that role via STS. This way, Account A obtains temporary credentials with only the permissions to the bucket, and no long-term credentials are shared. Creating an IAM user in Account B and sharing its keys is poor security (it’s hard to manage and revoke, and exposes static credentials). Making the bucket public is not acceptable unless you want *everyone* to have access. AWS RAM is used for sharing certain resource types (like VPC subnets, Aurora clusters) across accounts; it doesn’t support S3 buckets, which are instead shared via bucket policies or cross-account roles as described."""

\[\[awsdev.questions]]
question = "A database password must be changed every 30 days automatically. Which AWS service can manage and rotate this secret for the application?"
answers = \["AWS Secrets Manager"]
alternatives = \[
"AWS Systems Manager Parameter Store",
"AWS Key Management Service (KMS)",
"Amazon Cognito"
]
explanation = """AWS Secrets Manager is the service that not only stores secrets securely but also can automatically rotate them using Lambda functions for supported services (like RDS databases). Systems Manager Parameter Store (SecureString) can store secrets, but it does not have an automatic rotation feature—you'd have to implement rotation yourself. KMS manages encryption keys, not arbitrary secrets like database passwords (KMS keys can be rotated, but that's for encryption keys, not for changing a database password). Amazon Cognito is for managing user logins (authentication), not for rotating application secrets."""

\[\[awsdev.questions]]
question = "Which of the following are AWS security best practices for application development? (Select THREE)"
answers = \["Apply the principle of least privilege when granting IAM permissions", "Use IAM roles instead of embedding long-term credentials in code", "Store sensitive credentials (like passwords) in secure services such as Secrets Manager or Parameter Store"]
alternatives = \[
"Embed secret keys and passwords in your application code for quick access",
"Grant broad IAM permissions (e.g., AdministratorAccess) to applications to avoid permission issues",
"Allow public access to resources by default and restrict later if needed"
]
explanation = """Security best practices include using the least privilege principle (only give the minimum permissions required), avoiding hard-coded credentials by using IAM roles/temporary credentials, and keeping secrets out of code by using secure services (Secrets Manager, SSM Parameter Store, etc.). In contrast, embedding secrets in code or config is dangerous, giving overly broad permissions is risky (could be exploited if the app is compromised), and making resources public by default is obviously not secure. Instead, restrict access from the start and only open up what's necessary."""

\[\[awsdev.questions]]
question = "A team wants to automate deploying a new version of their application to a fleet of EC2 instances with minimal downtime. Which AWS service can orchestrate this deployment process?"
answers = \["AWS CodeDeploy"]
alternatives = \[
"AWS CodeCommit",
"AWS CodeBuild",
"AWS CloudFormation"
]
explanation = """AWS CodeDeploy is a deployment service that can push out new application code to EC2 instances (and other compute platforms) while handling strategies like rolling updates or blue/green to minimize downtime. It is designed for automating application deployments. AWS CodeCommit is just a source code repository (git), not a deployment tool. AWS CodeBuild is for compiling/building code and running tests, not deploying to servers. AWS CloudFormation deploys infrastructure (it could replace instances as a way to deploy code, but it’s not typically used just to deploy application updates on existing servers in the way CodeDeploy is)."""

\[\[awsdev.questions]]
question = "The team wants a fully AWS-managed CI/CD pipeline from source code commit to deployment. Which combination of services can provide source control, build, and deployment in this pipeline?"
answers = \["Use AWS CodeCommit for the code repository, AWS CodeBuild for build/test, and AWS CodeDeploy for deployment"]
alternatives = \[
"Use GitHub for the repository, Jenkins on an EC2 for builds, and AWS CodeDeploy for deployment",
"Use AWS CodeCommit for source, AWS CodePipeline for building the code, and AWS CloudFormation for deployment",
"Use AWS CodeCommit for source, AWS CodePipeline to orchestrate, and AWS CodeDeploy for deployment (with no build step)"
]
explanation = """A fully AWS-native CI/CD pipeline typically involves CodeCommit (git repo), CodeBuild (to compile/test), and CodeDeploy (to push out the application). These cover source control, build, and deploy stages respectively. Option 1 uses external/self-managed components (GitHub, Jenkins) which are not fully managed by AWS (they can work, but the question asks for AWS-managed services). Option 2 suggests CodePipeline doing the build — CodePipeline orchestrates steps but it doesn’t compile code itself (you’d still need CodeBuild in the pipeline; also using CloudFormation here is about deploying infra, not necessarily the application code to servers). Option 3 omits a build step entirely (CodePipeline + CodeDeploy but no CodeBuild), which wouldn’t be a complete CI/CD process if your code needs building or testing; CodePipeline doesn’t replace CodeBuild, it coordinates the pipeline including calling CodeBuild where needed."""

\[\[awsdev.questions]]
question = "A small company wants to deploy a web application on AWS without managing the underlying servers, load balancer, or auto-scaling. Which service should they use?"
answers = \["AWS Elastic Beanstalk"]
alternatives = \[
"Amazon EC2 (manually manage servers)",
"Amazon Lightsail",
"AWS OpsWorks"
]
explanation = """AWS Elastic Beanstalk is a platform-as-a-service offering that takes your application code and automatically handles provisioning of EC2 instances, load balancers, and auto-scaling behind the scenes. It greatly simplifies deployment and management of the application. Running on raw Amazon EC2 would require the team to manage the servers, LB, scaling, etc. Amazon Lightsail is a simpler VPS service; it can host a basic site, but it doesn't auto-scale across multiple instances or manage load balancing for you by default like Beanstalk does. AWS OpsWorks (which uses Chef/Puppet) is more for configuration management on servers and is not as straightforward for quickly deploying a standard web app as Elastic Beanstalk is."""

\[\[awsdev.questions]]
question = "A team wants to automate the provisioning of all their application infrastructure (servers, databases, networking) in a repeatable way. What AWS service should they use to define and deploy this infrastructure as code?"
answers = \["AWS CloudFormation"]
alternatives = \[
"AWS OpsWorks",
"Manually create resources via the AWS Management Console",
"AWS CodeCommit"
]
explanation = """AWS CloudFormation allows you to define your infrastructure in template files and deploy that consistently across environments. It will create and configure all specified resources for you, ensuring repeatability and automating setup. OpsWorks uses configuration management (Chef/Puppet) and is not as broadly used for defining all infrastructure resources as CloudFormation. Manually clicking in the Console is not repeatable or automated. AWS CodeCommit is a source code git repository and does not provision infrastructure."""

\[\[awsdev.questions]]
question = "What deployment strategy involves running a new version of an application alongside the old version and then switching all traffic to the new version only after testing it in parallel?"
answers = \["Blue/Green deployment"]
alternatives = \[
"Rolling deployment",
"Canary deployment",
"In-place update (all-at-once)"
]
explanation = """Blue/Green deployment means you have two environments: one running the current (blue) version and one running the new (green) version. You test the green environment, then switch traffic over (usually via an update in DNS or load balancer) so all users go to green. If something is wrong, you can switch back to blue quickly. In a rolling deployment, you replace instances of the old version with new version instances gradually, not keeping two full environments. A canary deployment sends a small percentage of traffic to the new version and gradually increases it, rather than an all-at-once cutover (canary and blue/green are related, but canary is incremental traffic shifting). An in-place all-at-once update means you just deploy the new version onto your existing environment in one go, which would cause downtime and isn't the safe parallel approach that blue/green provides."""

\[\[awsdev.questions]]
question = "A developer wants to deploy a new Lambda function version with minimal risk. They would like to send only a small percentage of live traffic to the new version initially, and the rest to the stable version. How can this be achieved?"
answers = \["Use a Lambda alias with a routing configuration (or AWS CodeDeploy for Lambda) to direct a small percentage of invocations to the new version"]
alternatives = \[
"Deploy the new code as a separate Lambda function and update half the clients to use it",
"Gradually increase the Lambda function's memory setting to test the new version",
"It's not possible to route a subset of traffic to a new Lambda version; all traffic goes to the latest version"
]
explanation = """AWS Lambda aliases support weighted routing between two versions of a function. For example, you can configure an alias to send 10% of invocations to the new version and 90% to the old version. AWS CodeDeploy provides a deployment configuration for Lambda that automates this canary or linear traffic shifting using such aliases. In contrast, deploying a separate Lambda and pointing some clients to it is a very manual approach and not dynamic (plus you'd have to orchestrate which clients use which). Adjusting memory has nothing to do with testing a new code version safely. And it is indeed possible to split traffic; you are not forced to send 100% of calls to the latest version if you use aliases/CodeDeploy for Lambda."""

\[\[awsdev.questions]]
question = "A developer is containerizing an application. Where should they store the Docker container images so that they can be easily deployed to AWS services?"
answers = \["Amazon Elastic Container Registry (ECR)"]
alternatives = \[
"Amazon S3",
"Docker Hub",
"AWS CodeCommit"
]
explanation = """Amazon ECR is AWS’s managed Docker container registry for storing and retrieving container images. It integrates with AWS services like ECS and EKS for deployment and uses IAM for access control. While you could technically store images as files in S3, that’s not practical or directly supported for container deployment processes. Docker Hub is a public container registry (or private with a subscription), but using it would mean external dependencies and potential rate limits; AWS offers ECR as a scalable alternative. AWS CodeCommit is a source code git repository and not meant for storing large binary images like Docker containers."""

\[\[awsdev.questions]]
question = "A developer wants to run a Docker container in AWS but does not want to manage any EC2 servers for it. Which service can they use?"
answers = \["AWS Fargate (with Amazon ECS or EKS)"]
alternatives = \[
"Launching the container on an EC2 instance",
"Amazon ECS with EC2 launch type",
"AWS Lambda with the container image"
]
explanation = """AWS Fargate is a serverless compute engine for containers: it allows you to run containers on AWS without provisioning or managing the underlying EC2 instances. You can use Fargate with ECS or EKS to run the container on-demand, and AWS handles the infrastructure. Launching containers on EC2 or using ECS in EC2 mode means you have to manage the server cluster yourself (scaling, patching, etc.). Lambda can run containers as functions (as packaging format), but it's limited to short-lived execution (max 15 minutes) and event-driven use cases. For a general containerized application that needs to run without server management, Fargate is the intended solution."""

\[\[awsdev.questions]]
question = "The development team uses many internal libraries and needs a place to store and share their Maven and npm packages within AWS. Which service can act as a private artifact/package repository?"
answers = \["AWS CodeArtifact"]
alternatives = \[
"Amazon S3",
"AWS CodeCommit",
"AWS Artifact"
]
explanation = """AWS CodeArtifact is a fully managed artifact repository for software packages. It supports package formats like Maven, npm, PyPI, etc., allowing the team to publish and retrieve internal dependencies easily with proper versioning and security. While Amazon S3 could be used as a raw storage for files, it doesn't provide package management features (like dependency resolution or convenient publishing/retrieving with package managers). AWS CodeCommit is for source code (git), not compiled packages. AWS Artifact (despite its name) is unrelated — it's a portal for compliance reports, not a code artifact storage service."""

\[\[awsdev.questions]]
question = "After deploying a Lambda function, where can the developer find the logs output by the function's code by default?"
answers = \["In Amazon CloudWatch Logs, in the log group for that Lambda function"]
alternatives = \[
"Stored in an S3 bucket automatically created for the Lambda",
"Captured by AWS CloudTrail",
"They are not retained unless manually exported"
]
explanation = """By default, AWS Lambda writes logs to Amazon CloudWatch Logs. Each Lambda function has a log group (usually named `/aws/lambda/<function-name>`) where you can find the logs for its invocations. These logs are stored automatically whenever the function runs. They are not automatically sent to S3 unless you set up an export or subscription. AWS CloudTrail records API calls (like calls to invoke the Lambda or manage it), but not the Lambda function's *execution logs*. And you don't have to manually save the logs—CloudWatch Logs keeps them (you can set retention policies, but otherwise they are retained by default)."""

\[\[awsdev.questions]]
question = "A developer wants to be notified if a Lambda function's error rate exceeds a certain threshold. What AWS service and feature can achieve this?"
answers = \["Use Amazon CloudWatch Alarms on the Lambda's error metric (and have the alarm send a notification via SNS)"]
alternatives = \[
"Use AWS CloudTrail with an alarm",
"Use AWS X-Ray's alerting feature",
"Manually monitor the logs periodically"
]
explanation = """Amazon CloudWatch can track metrics for AWS services (for example, Lambda automatically records metrics like invocation count and error count). The developer can create a CloudWatch Alarm on the "Errors" metric of the Lambda function and set a threshold; the alarm can be configured to send an SNS notification (email, etc.) when triggered. CloudTrail is for auditing API calls and doesn't provide threshold alarms on service metrics. AWS X-Ray is for tracing and debugging but doesn’t have a built-in alerting mechanism for error rates. Manually watching logs is not reliable—automated alarms are the proper solution."""

\[\[awsdev.questions]]
question = "An application is composed of multiple microservices. Users report that requests are slow, and the team suspects one of the services is causing delays. Which AWS service can help trace user requests through different microservices and identify where the latency is occurring?"
answers = \["AWS X-Ray"]
alternatives = \[
"Amazon CloudWatch metrics",
"AWS CloudTrail",
"Analyzing application logs manually"
]
explanation = """AWS X-Ray is designed for exactly this purpose: tracing requests end-to-end through a distributed application. By instrumenting the services, X-Ray provides a trace map and timing information for each segment (service), making it clear if, say, the database call in one microservice is slow. CloudWatch metrics might show individual service metrics (like CPU or latency per service) but won’t tie a single user request through all microservices. CloudTrail logs AWS API calls (for auditing), not the internal flow of an app. Manually checking logs across services without a tracing tool is tedious and may not easily correlate a single request through all components."""

\[\[awsdev.questions]]
question = "A Lambda function is attempting to write an item to a DynamoDB table and is failing with an 'AccessDenied' error. What is the MOST likely cause of this error?"
answers = \["The Lambda function’s execution role does not have permission (via IAM policy) to write to that DynamoDB table"]
alternatives = \[
"The DynamoDB table is not configured to accept writes from Lambda functions",
"The Lambda function is in a different VPC than the DynamoDB table",
"The Lambda's memory setting is too low to perform the write operation"
]
explanation = """An 'AccessDenied' error typically indicates an IAM permission issue. In this scenario, the most likely cause is that the Lambda’s IAM role lacks the necessary permissions (for example, missing a DynamoDB PutItem permission for the target table). If the role’s policy doesn’t allow the action, DynamoDB will refuse with AccessDenied. There’s no special DynamoDB configuration needed to accept Lambda writes beyond IAM permissions. The Lambda’s VPC doesn’t matter for DynamoDB access because DynamoDB is accessed over the internet (it's a web service; VPC or subnet differences would cause network timeouts, not AccessDenied). Memory settings of the Lambda would not cause an AccessDenied error—they would affect performance or cause out-of-memory issues, but not a permission error."""

\[\[awsdev.questions]]
question = "Which AWS service records API calls and resource changes in your account, providing an audit log of actions taken (e.g., who created or modified a resource)?"
answers = \["AWS CloudTrail"]
alternatives = \[
"Amazon CloudWatch",
"AWS Config",
"AWS CloudFormation"
]
explanation = """AWS CloudTrail logs all API calls and actions made in your AWS account – for example, if someone calls an AWS CLI command or if a resource is created, modified, or deleted via the AWS API, CloudTrail records that event (including who made the call and when). CloudWatch focuses on monitoring (metrics and logs for operational data) rather than a history of *who* did *what*. AWS Config does track the history of resource configurations, but it’s about the state of resources over time and compliance; it doesn’t log every API call or identify the user/API caller (Config often uses CloudTrail under the hood for change detection). CloudFormation is an infrastructure-as-code service and not an auditing tool at all."""

\[\[awsdev.questions]]
question = "A team wants to implement feature flags and dynamically change application settings at runtime without redeploying the application. Which AWS service can help manage and deploy application configuration changes safely (with validation and gradual rollout)?"
answers = \["AWS AppConfig (part of AWS Systems Manager)"]
alternatives = \[
"AWS Secrets Manager",
"AWS CloudFormation",
"Amazon EC2 User Data"
]
explanation = """AWS AppConfig (a feature of Systems Manager) is designed for managing application configuration and feature flags. It allows you to define config profiles, validate configurations, and deploy changes gradually to your application at runtime, which is ideal for feature toggles or dynamic settings changes. Secrets Manager is for sensitive data like passwords – not general feature flag config, and it doesn't provide deployment strategies (and you wouldn't want to misuse it for feature flags). CloudFormation can change configurations, but via redeploying stacks (not real-time toggles within a running app) and is geared to infrastructure setup. EC2 User Data provides initial launch configuration for instances and isn't a tool for dynamic config changes after launch."""

\[\[awsdev.questions]]
question = "An application needs a multi-region database solution for low-latency access in both the US and Europe. The team wants a single DynamoDB table that replicates data across regions. Which DynamoDB feature should be used?"
answers = \["DynamoDB Global Tables"]
alternatives = \[
"DynamoDB Local Secondary Indexes (LSI)",
"AWS Database Migration Service (DMS) replication",
"Multi-AZ (regional) deployment"
]
explanation = """DynamoDB Global Tables provide a multi-master, multi-region replication for DynamoDB tables. Using Global Tables, writes made in one region are replicated to other regions, and reads/writes can be performed locally in each region for low latency while keeping data in sync across regions. Local Secondary Indexes are not related to multi-region at all; they are additional indexes within a single DynamoDB table (and region). AWS DMS could replicate data between databases across regions, but that would be a custom solution and not multi-master (and far less seamless than enabling Global Tables). Multi-AZ is within a single region (high availability across AZs) and does not provide a multi-region capability."""
